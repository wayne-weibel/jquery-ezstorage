{"name":"JQuery EZstorage","tagline":"jQuery EZStorage Plugin: manages browser side storage of data","body":"jQuery EZStorage\r\n==================\r\n\r\njQuery EZStorage is a plugin that simplifies access to HTML5 storages & cookies.  The plugin handles determining where and how to store and retrieve data; in HTML5 Storage if it is available, or defaults to cookies.\r\n\r\nFunctionalities:\r\n\r\n- Store data easily, encode/decode it with JSON automatically.\r\n- Automatcially handles conversion of Number and String to Date for expiration values.\r\n- [jquery.cookie][1] and [JSON][2] should be included directly to avoid complications with browsers and data transfer.\r\n[1]: https://raw.github.com/carhartl/jquery-cookie/master/jquery.cookie.js\r\n[2]: http://cdnjs.cloudflare.com/ajax/libs/json2/20110223/json2.js\r\n\r\n<br />\r\n\r\nUsage\r\n-------------------------\r\n\r\n    $.ezstorage(action, key, value, options)\r\n\r\n overloaded function to manage 'storage'\r\n\r\n - checks if local/session Storage is implemented in the browser\r\n - checks if cookies are enabled\r\n - get/set key:value pairs (in Storage or as a cookie)\r\n - removes key:value pairs (in Storage or as a cookie)\r\n\r\n@param String __action__\r\n\r\n   - the action to perform:\r\n    - 'enabled' = verify that a storage option is possible\r\n    - 'get' = get a value from storage; returns null, Scalar, Object\r\n    - 'set' = set a key:value pair; value converted to JSON String if Object\r\n    - 'remove' = delete a key:value pair\r\n\r\n@param String __key__\r\n\r\n   - the key to store; n/a with enabled\r\n\r\n@param Mixed __value__\r\n\r\n   - the value to store; n/a with get or remove\r\n\r\n@param Object __options__\r\n\r\n  - options for setting the key:value; Optional - n/a with enabled\r\n  - if using HTMLStorage 'value' converted to an Object; value.expires = expireDate, etc.\r\n  - during 'get', check is made for expired; null returned if expired\r\n  - if expires omitted, sessionStorage used\r\n  - Object:\r\n\t- expires: Date object (preferred), Numeric number of days, or parseable date String\r\n    - persist: Boolean; whether to place value in localStorage despite expires being set\r\n    - path: String; only used if cookie,\r\n    - full: Boolean; whether to return the full object stored by ezstorage or just value\r\n\r\n@return Mixed\r\n\r\n  - 'enabled' = Boolean\r\n  - 'get' = null or stored value; will be Object if Scalar set with an expires\r\n  - 'set' = stored value;\r\n  - 'remove' = always True, if not a javascript error occured.\r\n\r\n<br />\r\nShorthand Functions\r\n-------------------------\r\n### `enabled()`\r\nCheck whether a storage method is available; HTML5 Storage or cookies\r\n\r\n    $.ezstorage.enabled();\r\n\r\n### `get(key, options = {})`\r\nGet an item from a storage.  Searches localStorage, sessionStorage, and cookies.\r\n\r\n    $.ezstorage.get('foo');\r\n    $.ezstorage.get('foo', {full:true}); // return {ezstorage:true â€¦} not just 'value'\r\n\r\n### `set(key, value, options = {})`\r\nSet an item in a storage. If options.expire or options.persist are set value is stored in localStorage, else sessionStorage/cookie.\r\n- __value__ is stored as an object: `{ezstorage:true, <options>, value:<value>}`\r\n\r\n\r\n    $.ezstorage.set('foo', 'value');\r\n    $.ezstorage.set('foo', 'value', {expires:3});\r\n    $.ezstorage.set('foo', 'value', {persist:true});\r\n\r\n### `remove(key, options = {})`\r\nDelete an item from all storages (local, session, and cookie).  Options only used if being stored as a cookie.\r\n\r\n    storage.remove('foo');\r\n\r\n<br />\r\nGlobal Object\r\n-------------------------\r\n\r\n     $.ezstorage.defaultSettings(); // return settings to {ezstorage: true, path:'/'};\r\n     $.ezstorage.settings = {<your settings>}; // no longer need to pass in function\r\n\r\n<br />\r\nCompatibility\r\n-------------\r\n\r\nJQuery EZStroage is compatible with all browsers that support (and have enabled) storage/cookies.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}